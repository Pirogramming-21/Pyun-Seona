flex, grid, 반응형 구현.
자바스크립트 안쓰고 애니메이션 구현하기

/*1-2강: 계획하기*/
가로로 먼저 자르고 세로로 자르기
웹사이트의 경우 좌우 여백이 같으므로 예외적으로 세로로 자르고 가운데정렬.

/* 1-3강 */
개발자도구를 사용하는 법 배움

/* 1-4강: favicon 똑같이 만들기 */
href="/favicon.ico?1" //여기서 "/"부분은 네이버 프로젝트 폴더가 된다.
href="./favicon.ico?1" // 경로 앞에 .이 있을 경우 현재 파일이 있는 폴더 안에 들어있는 favicon 접근

/* 1-5강 */
id : 공유 불가하다.
display: block; // 100% 공간 차지함
display: inline-block; // 컨텐츠 공간만 차지하고 text-aline :center까지 적용됨
display: inline; //width와 height 무시. 
높이나 너비를 주고싶으면 inline-block으로 해야함

/* 1-6강 */
body의 기본 마진 8px이 들어있는 이유?
브라우저마다 기본 css가 있음. 없애면 된다.
주의해야할 점 : 파일확장자와 숨김항목을 미리 켜놓고 있어야 한다.
id가 겹치지 않도록 주의

/* 1-7강 */
이미지 스프라이트를 쓰는 이유? 옛날 브라우저를 위한 것.
이미지를 받아오는 것이 비효율적이었기 때문이다.
-> 조정은 background-position 사용
개발자도구로 하고 복사해오는 것이 좋다.

무한히 연결되어있으므로 background-repeat : no-repeat; 사용하여라
이미지스프라이트의 사이즈를 정해놓고 해야 position을 결정할 수 있다.

/* 1-8강 */
1. header-hamburger를 button 속성으로 변경하고
background: none; border: none;으로 초기화
cursor: pointer;로 커서 적용

2. 패딩과 마진의 차이
마진은 바깥요소여서 버튼클릭이 불가. 
요소에 포함되게 만들고 싶으면 패딩, 제외하고싶으면 마진 사용
border까진 자신의 사이즈, Margin은 바깥부분이다.

3. header-hamburger에 hover기능 구현하기

/* 1-9강 */
기본적으로 position: static; 요소들이 어디에 있어야하는지 조절하는 것
position:relative; 자기의 위치에서 아래, 위 옆으로 이동할 때 사용
position:absolute; 기준점이 전체 화면. 부모 중 position: static;이 아닌 것 기준으로 기준점이 되어 이동
position: fixed; 스크롤 내려도 고정
position: sticky; 처음엔 absolute처럼 있다가 어느정도 스크롤을 내리면 fixed처럼 동작
relative와 absolute만 사용할 예정